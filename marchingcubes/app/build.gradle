/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'io.freefair.lombok' version '8.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // jMonkeyEngine core dependencies
    implementation 'org.jmonkeyengine:jme3-core:3.3.2-stable'
    implementation 'org.jmonkeyengine:jme3-desktop:3.3.2-stable'
    implementation 'org.jmonkeyengine:jme3-lwjgl3:3.3.2-stable'

    // External
    implementation 'com.github.stephengold:Minie:8.0.0'

    // Jackson Databind
    implementation(
            'com.fasterxml.jackson.core:jackson-core:2.16.1',
            'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    )

    // Log4j
    implementation(
            'org.apache.logging.log4j:log4j-core:2.23.0'
    )
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'ru.duckcoder.marchingcubes.mapgenerator.Application'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
